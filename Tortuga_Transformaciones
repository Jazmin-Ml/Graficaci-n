#include <GL/glut.h> 
#include <iostream> 
#include <stdlib.h> 
#include <math.h> 

//Equipo: 
// Jazmin Mijangos Lopez
// Ruben Octavio Rodriguez Cano

// Variables de transformación
float scaleX = 0.8;
float scaleY = 0.8;  //la medida de la tortuga es 0.8 menos pequeña que las medidas ya aplicadas
float rotateAngle = 5.0; //angulo de 5 grados

//si presiona la pantalla con click izquierdo la figura se ira moviendo, escalando y rotando 
//proporcionalmente a las medidas que ya se aplicaron desde que se ejecuto

void dibujarpolygon() { //aqui comienza la creacion de los poligonos

	glColor3f(0.0, 0.4, 0.6);
	glBegin(GL_POLYGON);
	glVertex2f(260, 180);
	glVertex2f(240, 140);
	glVertex2f(280, 120);
	glVertex2f(320, 140);
	glVertex2f(300, 180);
	glEnd();

	glColor3f(0.0, 0.3, 0.7);
	glBegin(GL_POLYGON);
	glVertex2f(240, 140);
	glVertex2f(220, 100);
	glVertex2f(180, 100);
	glVertex2f(160, 140);
	glVertex2f(200, 180);
	glEnd();

	glColor3f(0.5, 1.0, 1.0);
	glBegin(GL_POLYGON);
	glVertex2f(240, 300);
	glVertex2f(220, 260);
	glVertex2f(240, 220);
	glVertex2f(320, 220);
	glVertex2f(340, 260);
	glVertex2f(320, 300);
	glEnd();

	glColor3f(0.0, 0.7, 0.7);
	glBegin(GL_POLYGON);
	glVertex2f(250, 360);
	glVertex2f(220, 340);
	glVertex2f(240, 300);
	glVertex2f(320, 300);
	glVertex2f(340, 340);
	glVertex2f(310, 360);
	glEnd();

	glColor3f(0.0, 0.2, 1.0);
	glBegin(GL_POLYGON);
	glVertex2f(320, 140);
	glVertex2f(340, 100);
	glVertex2f(380, 100);
	glVertex2f(400, 140);
	glVertex2f(360, 180);
	glEnd();

	glColor3f(0.0, 0.0, 0.5);
	glBegin(GL_POLYGON);
	glVertex2f(240, 400);
	glVertex2f(250, 360);
	glVertex2f(310, 360);
	glVertex2f(320, 400);
	glVertex2f(280, 440);
	glEnd();

	glColor3f(0.0, 0.6, 0.8);
	glBegin(GL_POLYGON);
	glVertex2f(250, 460);
	glVertex2f(260, 420);
	glVertex2f(280, 440);
	glVertex2f(300, 420);
	glVertex2f(310, 460);
	glVertex2f(280, 480);
	glEnd();
}
void dibujarquads() {

	glColor3f(0.0, 0.5, 0.9);
	glBegin(GL_QUADS);
	glVertex2f(240, 220);
	glVertex2f(260, 180);
	glVertex2f(300, 180);
	glVertex2f(320, 220);
	glEnd();

	glColor3f(0.0, 1.0, 1.0);
	glBegin(GL_QUADS);
	glVertex2f(200, 180);
	glVertex2f(240, 140);
	glVertex2f(260, 180);
	glVertex2f(240, 220);
	glEnd();

	glColor3f(0.4, 0.8, 1.0);
	glBegin(GL_QUADS);
	glVertex2f(240, 220);
	glVertex2f(200, 180);
	glVertex2f(180, 270);
	glVertex2f(220, 260);
	glEnd();

	glColor3f(0.0, 0.4, 0.8);
	glBegin(GL_QUADS);
	glVertex2f(220, 260);
	glVertex2f(180, 270);
	glVertex2f(200, 380);
	glVertex2f(240, 300);
	glEnd();

	glColor3f(0.2, 0.6, 1.0);
	glBegin(GL_QUADS);
	glVertex2f(250, 360);
	glVertex2f(220, 340);
	glVertex2f(200, 380);
	glVertex2f(240, 400);
	glEnd();

	glColor3f(0.6, 0.8, 1.0);
	glBegin(GL_QUADS);
	glVertex2f(310, 360);
	glVertex2f(340, 340);
	glVertex2f(360, 380);
	glVertex2f(320, 400);
	glEnd();

	glColor3f(0.0, 0.5, 0.7);
	glBegin(GL_QUADS);
	glVertex2f(320, 300);
	glVertex2f(340, 260);
	glVertex2f(380, 270);
	glVertex2f(360, 380);
	glEnd();

	glColor3f(0.0, 0.2, 0.6);
	glBegin(GL_QUADS);
	glVertex2f(300, 180);
	glVertex2f(320, 140);
	glVertex2f(360, 180);
	glVertex2f(320, 220);
	glEnd();

	glColor3f(0.0, 0.5, 0.8);
	glBegin(GL_QUADS);
	glVertex2f(60, 320);
	glVertex2f(80, 400);
	glVertex2f(140, 440);
	glVertex2f(120, 380);
	glEnd();

	glColor3f(0.0, 0.5, 0.5);
	glBegin(GL_QUADS);
	glVertex2f(140, 440);
	glVertex2f(200, 380);
	glVertex2f(240, 400);
	glVertex2f(200, 440);
	glEnd();

	glColor3f(0.0, 0.6, 0.9);
	glBegin(GL_QUADS);
	glVertex2f(320, 400);
	glVertex2f(360, 380);
	glVertex2f(420, 440);
	glVertex2f(360, 440);
	glEnd();

	glColor3f(0.0, 0.0, 0.4);
	glBegin(GL_QUADS);
	glVertex2f(500, 320);
	glVertex2f(480, 400);
	glVertex2f(420, 440);
	glVertex2f(440, 380);
	glEnd();

	glColor3f(0.6, 1.0, 1.0);
	glBegin(GL_QUADS);
	glVertex2f(340, 260);
	glVertex2f(320, 220);
	glVertex2f(360, 180);
	glVertex2f(380, 270);
	glEnd();

}

void dibujartriangle() {

	glColor3f(0.0, 0.7, 0.7);
	glBegin(GL_TRIANGLES);
	glVertex2f(360, 380);
	glVertex2f(420, 440);
	glVertex2f(440, 380);
	glEnd();

	glColor3f(0.0, 0.7, 0.7);
	glBegin(GL_TRIANGLES);
	glVertex2f(120, 380);
	glVertex2f(140, 440);
	glVertex2f(200, 380);
	glEnd();

}

void myInit() {
	glClearColor(1.0, 1.0, 1.0, 0.0);
	glMatrixMode(GL_PROJECTION);
	glLoadIdentity();
	gluOrtho2D(0.0, 800.0, 0.0, 600.0);
}

void display() {
	glClear(GL_COLOR_BUFFER_BIT);
	glTranslatef(20, 0, 0); // Aqui se Aplican las transformaciones
	glScalef(scaleX, scaleY, 1.0);  
	glRotatef(rotateAngle, 0.0, 0.0, 1.0);
	glColor3f(1.0, 0.0, 0.0);

	// Aqui se dibujan las formas
	dibujarpolygon();
	dibujarquads();
	dibujartriangle(); 
	glFlush();
}

int main(int argc, char** argv) {
	glutInit(&argc, argv);
	glutInitWindowSize(800, 600);
	glutInitWindowPosition(10, 10);
	glutCreateWindow("Figura");
	myInit();
	glutDisplayFunc(display);
	glutMainLoop();
	return 0;
}
